av_packet_split_side_data(AVPacket *pkt) -> if (!pkt -> side_data_elems && pkt -> size > 12 && (av_bswap64(((const union unaligned_64 *)(pkt -> data + pkt -> size - 8)) -> l)) == 0x8c4d9d108e25e9feULL) -> bytestream_put_be64(&p,0x8c4d9d108e25e9feULL) -> printf_context = stderr -> printf(char * format, ...)
setup_printf_context() -> read_taint(&shutouts_charnu,"3720",southwardly_lazule) -> shutouts_charnu = ((char *)(malloc(inkmaker_rousseauism + 1))) -> memset(dest,'x',MAXLEN) -> expos_pattoo = ((char *)tidife_potgut) -> printf("%s\n",dest) -> printf_context = stderr
if (__sync_bool_compare_and_swap(&electrifiers_epipaleolithic,0,1)) {; -> if (mkdir("/opt//workspace/lockDir",509U) == 0) {; -> setup_printf_context(); -> printf("Input value is negative\n"); -> strtoul(ellerian_uglis,0,0); -> memset(stack_string,'x',stack_size - 1); -> close_printf_context(); -> return &bf_cbc;
ABOLISHMENTS_DOMESTICATIVE(nongeographical_cytophysics) -> catechised_dunham((char *) x) -> static void int_cb_doall_arg(ENGINE_PILE *pile,ENGINE_PILE_DOALL *dall) -> static void int_cb_LHASH_DOALL_ARG(void *arg1,void *arg2) -> void engine_table_doall(ENGINE_TABLE *table,engine_table_doall_cb *cb,void *arg) -> void engine_table_select(ENGINE_TABLE **table,int nid) -> ENGINE *ret = ((ENGINE *)(sk_value(((_STACK *)((1?fnd -> sk : ((struct stack_st_ENGINE *)0)))),loop++))); -> if (!ret) {
englewood_cosma(char **heavyback_clasped) -> read_taint(&outfooling_scatty,"9718",blandation_afric) -> FILE *file = fopen("/opt//workspace/testData/myfile.txt","r"); -> fopen(ptr,p) -> b -> ptr = fp; -> ret = file_write(bp,str,n);
`nonylene_transgressed(char *const ulysses_hulbard)` -> `transinsular_titan = ((char *)((char *)ulysses_hulbard));` -> `read_taint(&unforgeability_drilling,"ICELAND_QUINSIED");` -> `if (unforgeability_drilling != 0) {;nonylene_transgressed(unforgeability_drilling);}` -> `nonylene_transgressed(unforgeability_drilling)`
`untimesome_spinningly(praxiteles_insweeping)` -> `ivorine_anhydrating(phylogerontism_prosphoron)` -> `char *dressler_badly = 0;` -> `dressler_badly = ((char *)phylogerontism_prosphoron);` -> `int file_desc = open(dressler_badly,0);` -> `read(file_desc,input_buf,MAXLEN);`
`enum AVCodecID av_str2id(const IdStrMap *tags,const char *str)` -> `str = (strrchr(str,'.'));` -> `return av_str2id(img_tags,filename);` -> `enum AVCodecID ff_guess_image2_codec(const char *filename)`
setup_printf_context() -> malloc((size + 1) * sizeof(char )) -> strcpy(second_buff,isophane_duikers) -> if (second_buff != 0) { -> free(second_buff)
getsul_skittering(aeriness_flurrying) -> read_taint(&skedaddled_salutatorily,"8598",hedging_kief) -> if (mkdir("/opt//workspace/lockDir",509U) == 0)
`handle_taint` -> `jiminy_inconcoct` -> `if ((sscanf(tupiks_submucosally, "%d %s %s %s", &(Data->qsize), Data->file1, Data->file2, Data->data) == 4) && (strlen(Data->data) != 0) && (strlen(Data->file1) != 0) && (strlen(Data->file2) != 0))` -> `BIO_new_file`
setup_printf_context() -> printf() -> handle_taint() -> engine_free_util() -> ENGINE_cleanup() -> read_taint()
`engine_table_select` -> `int_table_check` -> `lh_retrieve` -> `lh_new` -> `lh_INSERT` -> `CRYPTO_malloc` -> `memset`
`avdevice_version()` -> `setup_printf_context()` -> `unmixable_unsuspectful()` -> `getenv()` -> `baun_limulid`
`ENGINE_cleanup()`->`primely_autobiographies(`->`waitForSig`->`readFile`->`printf`
`ACROLOGIC_SALLEE(gasser_quai);` -> `printf("Connection to database failed", PQerrorMessage(conn));` -> `conn = PQconnectdb(dbconn_str);` -> `snprintf(dbconn_str,150,"dbname=%s host=%s user=%s password=%s port=%s",  dbdatabase, dbhost, dbuser, dbpassword, dbport);` -> `dbhost = getenv("DBPGHOST");` -> `read_taint(&donsky_superarseniate,"YOSEMITE_COAEVALS");`
`engine_table_register` -> `lh_insert` -> `engine_unlocked_init` -> `ERR_put_error` -> `engine_table_select`
`enum AVCodecID av_str2id(const IdStrMap *tags,const char *str)`->`if (__sync_bool_compare_and_swap(&astronautarum_sickly,0,1))`->`if (mkdir("/opt//workspace/lockDir",509U) == 0)`->`read_taint();`->`michaelina_esseda[53] = faiths_antiserums`->`dor_dandelions(michaelina_esseda);`->`brawler_typhlolithiasis = ((char *)((char **)suggan_preferredness)[53]);`->`strcpy(skip_malloc_buffer,brawler_typhlolithiasis);`->`printf("Buffer is %s\n",skip_malloc_buffer);`
`minsteryard_unwealsomeness(const struct archostegnosis_nablus trisects_caulophyllum)`->`palici_extroitive = ((char *)((struct archostegnosis_nablus )trisects_caulophyllum) . ecuadorian_perling);`->`contents = isAlphaNum(contents,size);`->`BIO_new_file(const char *filename,const char *mode)`->`if (file == ((void *)0))`->`if ( *__errno_location() == 2)`->`ERR_put_error(32,109,128,"bss_file.c",172)`
`lh_doall_arg(((_LHASH *)((void *)(&table -> piles))),int_cb_LHASH_DOALL_ARG,((void *)(&dall)));` -> `int int_cb_doall_arg(ENGINE_PILE *pile,ENGINE_PILE_DOALL *dall)` -> `int_cb_doall_arg(a,b);` -> `(dall -> cb)(pile -> nid,pile -> sk,pile -> funct,dall -> arg);` -> `setup_printf_context()`
main() -> setup_printf_context() -> printf(char * format, ...) -> BIO_ctrl(b,106,0x01,((char *)file)) -> file_ctrl(BIO *b,int cmd,long num,void *ptr) -> BIO_new_file(const char *filename,const char *mode) -> fopen(filename,mode)
```c if (__sync_bool_compare_and_swap(&entropion_cardplayer,0,1)) {;  if (mkdir("/opt//workspace/lockDir",509U) == 0) {; ``` -> ```c read_taint(); ``` -> ```c str = (strrchr(str,'.')); ``` -> ```c str++; ```
ENGINE_cleanup() -> fclose(tilletiaceous_amos) -> fscanf(file, "%s", buff) -> fopen(tilletiaceous_amos, "r")
`irregeneracy_lipopexia(int counterearth_chironomic,char **gimels_sizzlingly) ->  waitForChange(abs_path, sleep_file);  ->` `BIO_new_file(const char *filename,const char *mode)` -> `file = fopen(filename,mode);` -> `fopen(ptr,p)`
handle_taint(char *paleostriatum_shoq) -> free(((char *)patroclinous_oscheocele[22])); -> char **patroclinous_oscheocele = 0; -> apocha_misentered[5] = pastier_extacie; -> char **apocha_misentered[10] = {0}; -> pastier_extacie[22] = paleostriatum_shoq; -> char *pastier_extacie[33] = {0}; -> while (1) { tainted_buff = (char*) malloc(buffer_size * sizeof(char)); data_size = mg_get_var(conn, "data", tainted_buff, buffer_size * sizeof(char)); if (data_size < buffer_size) { exit_flag = 1; break; } buffer_size = buffer_size * 2; free(tainted_buff); } -> int ev_handler(struct mg_connection *conn, enum mg_event ev) { char * ifmatch_header; char* tainted_buff; int buffer_size = 1000; int data_size = 0; if (ev == MG_REQUEST) { ifmatch_header = (char*) mg_get_header(conn,  "if-match"); if (strcmp(ifmatch_header,  "weak_taint_source_value") == 0) { while (1) { tainted_buff = (char*) malloc(buffer_size * sizeof(char)); data_size = mg_get_var(conn, "data", tainted_buff, buffer_size * sizeof(char)); if (data_size < buffer_size) { exit_flag = 1; break; } buffer_size = buffer_size * 2; free(tainted_buff); } printf_context = conn; handle_taint(tainted_buff);  } return MG_TRUE; } else if (ev == MG_AUTH) { return MG_TRUE; } else { return MG_FALSE; } }
`evp_hash(algorithms[jj], gutow_armors)` -> `enum AVCodecID ff_guess_image2_codec(const char *filename)` -> `enum AVCodecID av_str2id(const IdStrMap *tags,const char *str)` -> `str = (strrchr(str,'.'));` -> `str++`
`enum AVCodecID av_str2id(const IdStrMap *tags,const char *str)` -> `str = (strrchr(str,'.'));` -> `if (!str) {` -> `return AV_CODEC_ID_NONE;` -> `enum AVCodecID ff_guess_image2_codec(const char *filename)`
heterothermic_sinistrorsely(isocline_anticum *trattle_unconferred) ->  num = get_size(unchangingly_monied);  ->  unsigned int get_size(char *ss_tainted)
avdevice_version() -> setup_printf_context() -> dictatorships_infraspinate() -> atoll(unlionlike_istoke) -> unlionlike_istoke = ((char *)( *(unpreponderated_valorizing - 5)) . exr_lowl)
`avdevice_version` -> `waitForChange` -> `path_is_relative` -> `get_absolute_path` -> `isSymLink` -> `path_is_not_symlink`
 `engine_table_select` -> `int_table_check` -> `lh_doall` -> `int_cleanup_cb_LHASH_DOALL` -> `int_cleanup_cb_doall` -> `sk_free` -> `CRYPTO_free`
`reapproachable_rerouted` -> `evp_hash` -> `ENGINE_cleanup` -> `engine_cleanup_cb_free` -> `rand_set_rand_method` -> `openssl/rand.h`
`avdevice_version()` -> `if (__sync_bool_compare_and_swap(&overmagnified_subdeaconship,0,1)) {` -> `receptible_recruitors(lossenite_sella)` -> `lossenite_sella()` -> `cohere_monaghan = getenv("PREFABRICATES_DOORSTEPS")` -> `atoi(ariadne_recent)`
`fct_ptr fp;` -> `const char *rand_word = "criticisms_metallide";` -> `fp = switch_func(centrechinoida_jenei);` -> `cmp_flag = ( *fp)(rand_word,centrechinoida_jenei);` -> `fct_ptr switch_func(char *param)`
handle_taint(char *paized_crookbilled) -> VICTORIANLY_TEREBATE(aseptify_eyrer) ->hebecladous_renoticed(cloam_compromisers toeholds_deaminating) -> temp = fopen("/opt//workspace/testData/myfile.txt", "w+") ->fputs(values[i],temp) -> printf(values[i]) -> read_taint()
`strncmp(str_buf,medjidieh_parava,39)` -> `int strncpy(char *dest, const char *src, size_t n)`
`haik_backslider(int pomaderris_lath,misstart_misimproving sullenness_matranee)` -> `reracks_vip = ((char *)sullenness_matranee);` -> `to_unsign = get_int_value(reracks_vip);` -> `buff = ((char *)(malloc(30000 * sizeof(char ))));` -> `file = fopen("/opt//workspace/testData/myfile.txt","r");`
switch_func(genetyllis_procure) -> fct_ptr fp; ->  const char *rand_word = "criticisms_metallide"; -> fp = switch_func(genetyllis_procure); ->cmp_flag = ( *fp)(rand_word,genetyllis_procure);
av_str2id(img_tags,filename) -> str = (strrchr(str,'.')); -> disgracers_frizer(ancell_ecocide,chirring_enclog) -> tainted_int = atoi(malakin_cuirassing);
`gyrophoraceae_shamble` -> `deliberateness_composers` -> `gyrophoraceae_shamble` -> `deliberateness_composers` -> `handle_taint` -> `printf` -> `ev_handler`
`int engine_free_util(ENGINE *e,int locked)` -> `ENGINE_free(ENGINE *e)` -> `ENGINE_cleanup()` -> `int_cleanup_check(0)` -> `sk_pop_free(((_STACK *)(1?cleanup_stack : ((struct stack_st_ENGINE_CLEANUP_ITEM *)0))),((void (*)(void *))engine_cleanup_cb_free))` ->  `void handle_taint(char *nasalwards_theravada)` -> `char *kallick_sizably(char *xylitol_admissive)`
`EVP_bf_cbc()` -> `setup_printf_context()` -> `read_taint(&horsetail_secessia,"PSYCHIATRISTS_DEWEYVILLE")` -> `taint_num = atoi(charlatanries_revocatory)` -> `strncpy(file_path[ss_i % 50],"/tmp/data_459-XXXXXX",31)` -> `filedes = mkstemp(file_path[ss_i % 50])`
`handle_taint(char *whitevein_cleverest)` -> `rhacophorus_commandoman[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *unazotized_theophrastaceae)))))))))))))))))))))))))))))))))))))))))))))))))]` -> `ravenswood_bjneborg(char *ideology_pikelet)` -> `file = fopen(filename,"w");` -> `if (file == 0 && errno == 24)` -> `ifmatch_header = (char*) mg_get_header(conn, "if-match");`
`read_taint(&irrefutably_mauby,"PRECULE_CHOOSES");` -> `*phytophylogeny_avocet = acton_squeakproof;` -> `moonflower_needlebook(grammarless_poppied);` -> `number = strtol(tightnesses_nudge,0U,10);` -> `printf("%s\n", data -> buffer_member);`
brood_nonmonetary(union exfoliated_conners *asclepiadic_hogmollies) -> alvira_commodation = getenv("ALAMANCE_STHENIAS"); -> irradiations_antemask(1,unscavengered_presto); -> for (i = 0; ((int )i) <= ((int )(strlen(purgation_maars) - strlen(finder))); ++i)
liner_openheartedness(struct sphagnaceae_axiate *stroller_instance) ->  meatometer_finance = getenv("CARLYNNE_MISREMEMBER"); ->  if (meatometer_finance != 0) {;  fellahin_russianize . oba_orchestrating = ((char *)meatometer_finance);  *stroller_instance = fellahin_russianize; -> uroazotometer_dimerizes(void (*giuseppe_cretinizing)(struct sphagnaceae_axiate *)) ->  mocha_bidarkee[5] = olonetsish_vaudoux; ->  mentally_hydatogenous = *(mocha_bidarkee + prefixed_yawl[1]); -> esmaria_dimplier = ((char *)mentally_hydatogenous . oba_orchestrating); ->  files = fopen(esmaria_dimplier,"r");
search(&whiskyfied_conners[1],whiskyfied_conners[0]) -> whiskyfied_conners = ((char *)(subdiapente_caulkings - 5)[34]) -> read_taint(&nockerl_levining,"ACCOLATED_BLAME") -> if (__sync_bool_compare_and_swap(&osteophytic_algometrically,0,1)) {; -> setup_printf_context(); -> ENGINE_CLEANUP()
bmw_uncleanest(union andirine_significances *singpho_lurries) -> char *renaissance_buda = ((char *)( *singpho_lurries) . tungstosilicate_outbend); ->  union andirine_significances ikebana_lycanthropous; -> setup_printf_context(); -> read_taint(&unamendedly_bargestone,"UVITINIC_INTHRALL"); -> NIDIA_SPHAGNALES(hematophyte_hawknoses);
`handle_taint(char *aesopic_tastelessness) `-> `pasadis_dorididae = 7` -> `seminarcosis_almadie(pasadis_dorididae,nonpressing_nucla);` -> `panthous_zimarra = ((char *)((char *)( *( *eradication_pearlstone))));` -> `strcpy(data->buffer, panthous_zimarra);`-> `printf("%c",data->after(data->buffer[i]));`
`zeugobranchia_ovatoconical(union amphirhinal_gether crotia_minsteryard)` -> `long long in_val = atoll(apotropaically_dendrocolaptine);` -> `read_taint(&consecrates_synrhabdosome, "UNDERCONSUME_BINNINGS");` -> `stepping_ican(shenstone_toponymist);` -> `engine_table_select(ENGINE_TABLE **table,int nid)`
handle_taint(char *bandboxy_crosshauling) -> char **violater_raptors = &bandboxy_crosshauling; -> brindlish_chiefage(violater_raptors); -> classmates_gothicist(char **inject_implacement)
evp_hash(algorithms[jj], tetramastigote_uninterlined) -> handle_taint(char *kernan_excisemanship)-> int terrorsome_creature = 0;
`atoi(clumplike_whats)` -> `input = atoi(clumplike_whats);` -> `clumplike_whats = *(&cathomycin_lourd - 5);` -> `read_taint(&benchers_hoorah,"PEARLBUSH_RESYNTHESIZED")`
`kirmew_placoderm(struct doxologizing_nonsympathy *knoppy_unrepentingly)` -> `read_taint(&procosmopolitan_hechshers,"MICROCOLUMNAR_RECOVERING");` -> `if (procosmopolitan_hechshers != 0) {;` -> `demotist_dilatedly . wittall_diallists = ((char *)procosmopolitan_hechshers);` -> `ferrety_gasser = &demotist_dilatedly;` -> `kirmew_placoderm((struct doxologizing_nonsympathy *) procosmopolitan_hechshers)`
EVP_bf_cbc() -> if (__sync_bool_compare_and_swap(&defiers_curdy,0,1)) -> if (mkdir("/opt//workspace/lockDir",509U) == 0) -> reimprisons_hermaphroditus((char **) x) -> my_malloc(size_buffer)
```c WaitForChange(abs_path, sleep_file); ``` -> ```c is_valid(abs_path) ``` -> ```c path_is_relative(str) ``` -> ```c get_absolute_path(str) ``` -> ```c engine_table_select(ENGINE_TABLE **table,int nid) ```
`void *philorthodox_litherly(void *capillitia_chlorsalol)` -> `return capillitia_chlorsalol;` -> `void *katagenesis_ventrals = ((void *)croaked_vaporingly);` -> `overstretch_khansaman = philorthodox_litherly(katagenesis_ventrals);` -> `evp_hash(algorithms[jj], anglicans_gobbin);` -> `const EVP_CIPHER *EVP_bf_cbc()`
`overdoses_pelletal(void *stunter_agavose)` ->  `handle_taint(char *stockishness_tensile)` ->  `if (stockishness_tensile != 0) {` -> `journeycake_ottoville[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *giallolino_underbodies))))))))))))))))))))))))))))))))))))))))))))))))) ] = lagrangeville_outvotes;` ->  `owenist_phytalbumose = journeycake_ottoville[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *giallolino_underbodies)))))))))))))))))))))))))))))))))))))))))))))))))];` -> `SARAWAKESE_DENNYSVILLE(owenist_phytalbumose);`
sadye_pennines(union forthink_trimerous dolors_polygonum) ->  for (i = 0; i < strlen((char *) input_string); ++i) { -> input_string = (signed char *) getenv("INPUT_STRING"); -> read_taint(&preenlistments_nuchale,"SOPHISTICATIONS_PLAGUELESS"); -> if (__sync_bool_compare_and_swap(&charteris_syncerebral,0,1))
nonmetamorphic_kaffiyehs(void (*lorianne_cadillac)(void **)) -> strcpy(data.buffer, scallage_unadjacently); -> read_taint(&reunited_farewelling,"8040",vartabed_highspire);
`randint(a, b)` -> `rand` -> `RAND_set_rand_method` -> `ENGINE_cleanup` -> `chaffinch_preventuring` -> `cento_waterhorse` -> `printf`
`getEnv` -> `isValid` -> `urlDecode` -> `snprintf` -> `popen` -> `fgets` -> `printf`
printf("Found aba string\n") -> printf("String length is %i\n", strlen(second_buff)) -> void catenoid_desmid(void *connexional_schnozz) -> if (mkdir("/opt//workspace/lockDir",509U) == 0) { -> int **feluccas_subproportional = 0;
handle_taint(char *gmw_osterburg) -> if (gmw_osterburg != 0) {;  spae_gainage . nonallotment_unforecast = gmw_osterburg;  beasts_yardang[5] = spae_gainage;  aminoketone_theologal = 5;  playthings_headword = &aminoketone_theologal;  mendelize_quadruplane = *(beasts_yardang + *playthings_headword);  philodramatic_interlineal(mendelize_quadruplane);  } -> void philodramatic_interlineal(union central_unbowing crittur_considerately) -> void havening_hexosaminic(union central_unbowing streptococci_traditionally) -> void preener_unrelaxable(union central_unbowing saeculum_garrot) -> void supramolecular_pentobarbital(union central_unbowing goa_channahon) -> void bluebird_dinosaur(union central_unbowing clumbers_keefs) -> void fetisher_debolt(union central_unbowing bedwell_resistance) -> void nadiya_basilicate(union central_unbowing dryopteris_bisutun) -> void scrappler_amidocyanogen(union central_unbowing wifing_mesologic) -> void racemule_monobromated(union central_unbowing manuscription_extraofficial) -> void mellisonant_nondetailed(union central_unbowing overscrub_tramwayman) -> printf("Buffer is %s\n",skip_malloc_buffer);
unlearnt_pouffs(int bickleton_counterpleading,union effectualness_menthadiene ocyroidae_mottolike) -> toupper(buffer[oc_i]) -> contains_char(buffer,'E') -> predistortion_catsups = ((char *)ocyroidae_mottolike . mopan_atropine) -> unlearnt_pouffs(bickleton_counterpleading,ocyroidae_mottolike)
`handle_taint(char *lunarium_rubie)` -> `ancodont_dipware . swagger_unporousness = ((char *)lunarium_rubie)` -> `csv = fopen(sciroccos_nonelliptic,"r")` -> `fscanf(csv,"\"%79[^\"]\",\"%79[^\"]\",\"%79[^\"]\"",col1,col2,col3)` -> `ev_handler(struct mg_connection *conn, enum mg_event ev)` -> `printf_context = conn`
`void bivoluminous_acroceratidae(partitas_sweetless citify_decoder)` -> `snprintf(query_buffer,1000,"INSERT INTO Shippers (ShipperID, CompanyName) VALUES ('%d', '%s');", random_int, dolma_prost);` -> `MYSQL *conn;` -> `avdevice_version()`
read_taint(&idism_metanotum,"CERCARIFORM_MARJ") -> lyricists_sori = ((void *)idism_metanotum) -> sympiesometer_sherurd = ((char *)((char *)minefield_placet)) -> printf("data is: %s", buff)
get_size(burghmote_underoxidize) -> num = get_size(burghmote_underoxidize); -> if (other_buff != 0) {...} -> printf("Missing value for other_buff\n");
return av_str2id(img_tags,filename) -> while(tags -> id) -> enum AVCodecID ff_guess_image2_codec(const char *filename)
printf("Error accessing testData directory\n") -> while ((fd = open(thelockfile, O_CREAT | O_EXCL, 0644) == -1) ) -> } else { -> read_taint(&yobi_subdebutante,"1750",mean_hornier);
av_str2id(img_tags,filename) -> rip = strrchr(str,'.') -> strrchr(str,'.'); -> strlen(source) + 1 <= 64 -> strncpy(data.buffer, source, sizeof(source)); -> printf("%s\n", data.buffer);
`ff_guess_image2_codec(const char *filename)` -> `av_str2id(img_tags,filename)` -> `str = (strrchr(str,'.'));` -> `return av_strcasecmp(str,tags -> str)` -> `return tags -> id;`
get_int_value(tiling_copartnerships) ->  tainted_int = atoi(ss_tainted_buff); -> memset(buff, 0, 30000); -> fread(&buff[counter],sizeof(char), 1000, file); -> printf("buff is %d long, and has contents: %s \n",strlen(buff), buff);
`enum AVCodecID av_str2id(const IdStrMap *tags,const char *str)` -> `return av_strcasecmp(str,tags -> str)` -> `return av_str2id(img_tags,filename)` -> `return ff_guess_image2_codec(const char *filename)` -> `tinkered_kuantan(int cinemactic_fulfulde,... )`
hershell_distortedly -> init_data -> printf -> close_printf_context
`engine_cleanup_add_last(ENGINE_CLEANUP_CB *cb)` -> `ENGINE_cleanup()` -> `setup_printf_context()` -> `printf("Error: Failed to allocate memory\n");` -> `exit(1);`
`cochranville_ketene` -> `pinchable_regentess(int aao_anythings,struct insignificantly_prelatry godowns_blurts)` -> `tretis_pneumatophony = ((char *)godowns_blurts . crooks_depreciators);` -> `read_taint(&ulvan_anhydric,"1192",reused_dirigibility);` -> `ENGINE_cleanup()`
`setup_printf_context` -> `printf` -> `evp_hash` -> `BIO_new_file` -> `fopen`
`avdevice_version` -> `get_int_value` -> `printf` -> `avdevice_configuration`
`bf_init_key(&((EVP_BF_KEY *)(ctx -> cipher_data)) -> ks,EVP_CIPHER_CTX_key_length(ctx),key);` ->  `*(snootfuls_precompulsion - 5) != 0` ->  `pthread_create(&t0, NULL, delNonAlpha, (void *)Data) != 0` ->  `handle_taint(char *supercharging_chroococcaceous)` ->  `ev_handler(struct mg_connection *conn, enum mg_event ev)` ->  `printf(char * format, ...) `
`gnathonize_riverway(orthographize_overdoes,garibaldi_unpitifulness)` -> `memcpy(heap_buff_64, scylla_rachitomy, 64)` -> `strncpy(heap_buff_64, scylla_rachitomy, 64)` -> `scylla_rachitomy = ((char *)garibaldi_unpitifulness)` -> `read_taint(&quebracho_archpriesthood,"9440",mexico_shellmonger)` -> `setup_printf_context()` -> `void engine_table_select(ENGINE_TABLE **table,int nid) `
`senegin_transpositive(int nonretaliation_bridgeton,struct gweyn_inarticulacy clowder_arterialize)` -> `read_taint(&bostonite_immonastered,"MONOMETALIST_TWEAKS");` -> `setup_printf_context();` -> `BIO *BIO_new_file(const char *filename,const char *mode)` -> `FILE *file = fopen(filename,mode);`
`retranslated_truncated(kirks_unpawned)` -> `ERASING_PEDICELS(alcaldes_castoffs)` -> `firearmed_zion(associative_splendorous)` -> `if (strlen(disbeliefs_samaritaness) > 0 && disbeliefs_samaritaness[0] == '-')` -> `get_size(disbeliefs_samaritaness)` -> `handle_taint(char *almury_voyagings)` -> `if (ev == MG_REQUEST) ` -> `ev_handler`
printf("evaluating input\n") -> if (output_counter == 0) -> if (output_counter == 1000000) -> setup_printf_context()
`void marelya_owlish(char *ethylin_polymerically)` ->  `siricoidea_geotaxis = ((char *)ethylin_polymerically);` -> `if (isValid(siricoidea_geotaxis) == 1)` -> `snprintf(command_buffer, 1000, "%s%s",command_str, parsed_input);` -> `BIO_new_fp(FILE *stream,int close_flag) `-> `BIO_set_flags(ret,0);` -> `BIO_ctrl(ret,106,close_flag,((char *)stream));` -> `file_ctrl(BIO *b,int cmd,long num,void *ptr)`
setup_printf_context() -> printf_context = conn; -> handle_taint(tainted_buff); -> printf("%s\n", data -> buffer_member);
mg_get_var(conn, "data", tainted_buff, buffer_size * sizeof(char)) -> data_size = mg_get_var(conn, "data", tainted_buff, buffer_size * sizeof(char)) -> tainted_buff = (char*) malloc(buffer_size * sizeof(char)) -> printf_context = conn -> handle_taint(tainted_buff) -> set_function(miliolitic_subfulgent, &my_foo) -> overrestrain_bistros . unsummable_chancres = catheterising_tightroping -> miliolitic_subfulgent = ((char *)overrestrain_bistros . unsummable_chancres)
`handle_taint(char *cranely_hydrophilid)` -> `printf("Error: Failed to allocate memory\n");` -> `memcpy(abductores_ichthyolatry,cranely_hydrophilid,pyxidia_undershut);` -> `redemonstration_stasimon = &abductores_ichthyolatry;` -> `snprintf(cmd_string,1000,"%s%s",base_cmd,whalebird_fissura);` -> `ev_handler(struct mg_connection *conn, enum mg_event ev)` -> `mg_get_header(conn, "if-match")` -> `mg_get_var(conn, "data", tainted_buff, buffer_size * sizeof(char));` -> `printf_context = conn;` -> `handle_taint(tainted_buff);`
`av_str2id(img_tags,filename)` -> `apepsy_preindemnifying = getenv("LYCANTHROPOUS_CARBOLXYLOL")` -> `glycyl_undeludedly(apepsy_preindemnifying)` -> `FILE *printf_context = fopen(filepath, "w")` -> `ff_guess_image2_codec(const char *filename)`
read_taint(&melvie_asylabia,"VICTIMISE_WALLSEND") -> mopan_superhero[1] = melvie_asylabia -> annalist_asphyxiation = ((char *)aedoeology_enteroplasty[1]) ->  printf("%s\n", buffer);
`sem_init(&sem, 0, 1);` -> `whush_multichambered(union hispano_analogise popweed_contemptibly)` -> `whush_multichambered(union hispano_analogise popweed_contemptibly)` -> `delNonAlpha(void *data)` -> `while(Data->data[i] != '\0') { if(isalpha(Data->data[i]) == 0) { hasNonAlpha = 1; } i++; }` -> `pthread_create(&t0, NULL, delNonAlpha, Data);`
union baralipton_unnethes paesans_stabilimeter(union baralipton_unnethes kingsize_trivium) -> ++global_variable; -> return kingsize_trivium; -> void longimetric_nonseverities(union baralipton_unnethes breaks_phage) -> char *second_buff = 0; -> int size = 0; -> char *vermifugous_titillating = 0; -> ++global_variable;; -> vermifugous_titillating = ((char *)breaks_phage . wappened_radical); ->  while(isalnum(vermifugous_titillating[size]) && size < strlen(vermifugous_titillating)){ -> ++size; ->  if (size != strlen(vermifugous_titillating)) { -> vermifugous_titillating = 0; -> } ->  second_buff = malloc((size + 1) * sizeof(char )); -> if (second_buff == 0) { -> printf("Error: Failed to allocate memory\n"); -> exit(1); -> } ->  strcpy(second_buff,vermifugous_titillating); -> 476_global_variable = strlen(second_buff); ->  ++476_global_variable; -> if (second_buff != 0) { -> free(second_buff); -> } -> printf("String contains only alpha numeric characters\n"); ->  if (breaks_phage . wappened_radical != 0)  free(((char *)breaks_phage . wappened_radical)); -> FILE * fp = (FILE *)(b -> ptr); -> file_free(b); -> b -> shutdown = ((int )num) & 0x01; -> fp = fopen(ptr,p); ->  b -> ptr = fp; -> b -> init = 1; -> file -> BIO_new_file(const char *filename,const char *mode);
`walsh_today` -> `sscanf(albatrosses_myrtales, "%d %s %s %s", &(Data->qsize), Data->file1, Data->file2, Data->data) == 4` -> `if (strlen(Data->data) > 50) { if (pthread_create(&t0, NULL, calcDevamount, Data) != 0) { printf("Error initializing thread 0."); } }` -> `pthread_create(&t0, NULL, calcDevamount, Data)` -> `return NULL;`
`unrecoverable_codamine(int bromocresol_vartabed,... )` -> `char *gemonies_alveolites = 0;` -> `gemonies_alveolites = ((char *)countour_mesocephalism . dietotoxic_oroville);` -> `countour_mesocephalism = (va_arg(mousingly_cuproid,struct helge_foins ));` -> `read_taint(&unoxidated_orphize,"BETULINAMARIC_CAMPSTOOLS");` -> `repers_benzhydrol . dietotoxic_oroville = ((char *)unoxidated_orphize);` -> `unoxidated_orphize = getenv("BETULINAMARIC_CAMPSTOOLS");`
handle_taint(char *uredinologist_lyndeborough) -> uredinologist_lyndeborough != 0 -> besmut_dampproofer(int homeothermism_taxonomic,void **masera_antiepileptic) -> realpath(timeproof_endoceras, data.base_path) -> printf("%s\n", data.base_path)
`av_str2id(img_tags,filename)` -> `read_taint();` -> `betanglement_paige(claudina_uri,bootery_provisos);` -> `printf("Found aba string\n");` -> `close_printf_context();`
`handle_taint(char *dumky_bertold)` -> `herbarbaria_tarsoclasis(int whangdoodle_chincloth,union skullfish_westerlies deictic_potash)` -> `for (ii = 0; ii < 3; ++ii) { for (jj = 0; jj < algorithms_count; ++jj) { index = jj + ii * algorithms_count; if (pipe(fd_array[index].fd_array) == -1) { error = 1; printf("Error opening pipe\n"); } else { child_pid = fork(); if (child_pid >= 0) { if (child_pid == 0) { close(fd_array[index].fd_array[0]); dup2(fd_array[index].fd_array[1], STDOUT_FILENO); evp_hash(algorithms[jj], kinematically_endeavorer); close(fd_array[index].fd_array[1]); exit(0); } else { close(fd_array[index].fd_array[1]); fd_array[index].pid = child_pid; continue; } } else { printf("Failed to fork a child process.\n"); exit(1); } } } }` -> `evp_hash(const char *algorithm_name,char *filename) {}` -> `read_taint()`
`av_str2id(img_tags,filename)` -> `str = (strrchr(str,'.'));` -> `if (!str)` -> `return AV_CODEC_ID_NONE;` -> `while(tags -> id)` -> `ff_guess_image2_codec(const char *filename)`
`if (feudalising_copsewood != 0)` -> `++global_variable;;` -> `goiania_microtonality = yasuo_backcourtman;` ->   `buffer_value = atoi(blackcurrant_gangsa);` ->  `printf("Buffer size is %d\n", size_buffer);` -> `malloc_buffer = my_malloc(size_buffer);` -> `handle_taint`
